- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"address\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), \"address_line_1\" text NOT NULL, \"address_line_2\"
      text NOT NULL, \"address_line_3\" text NOT NULL, \"admin_area_4\" text NOT NULL,
      \"admin_area_3\" text NOT NULL, \"admin_area_2\" text NOT NULL, \"admin_area_1\"
      text NOT NULL, \"postal_code\" text NOT NULL, \"country_code\" text NOT NULL,
      PRIMARY KEY (\"id\") ); COMMENT ON TABLE \"public\".\"address\" IS E'Modeled
      after the PayPal portable address schema.';\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_address_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"address\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_address_updated_at\" ON \"public\".\"address\" \nIS
      'trigger to set value of column \"updated_at\" to current timestamp on row update';"
  type: run_sql
- args:
    name: address
    schema: public
  type: add_existing_table_or_view
