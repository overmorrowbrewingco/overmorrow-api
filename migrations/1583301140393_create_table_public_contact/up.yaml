- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"contact\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), \"full_name\" text NOT NULL, \"preferred_name\" text,
      \"preferred_language\" text, \"active\" boolean NOT NULL DEFAULT true, \"gender\"
      text, \"title\" text NOT NULL, \"phone_number\" text, \"email_address\" text,
      \"facebook_handle\" text, \"preferred_communication_method\" text, \"user_id\"
      uuid, PRIMARY KEY (\"id\") , FOREIGN KEY (\"user_id\") REFERENCES \"public\".\"user\"(\"id\")
      ON UPDATE set null ON DELETE set null, UNIQUE (\"id\"));\nCREATE OR REPLACE
      FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS TRIGGER
      AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_contact_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"contact\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_contact_updated_at\" ON \"public\".\"contact\" \nIS
      'trigger to set value of column \"updated_at\" to current timestamp on row update';"
  type: run_sql
- args:
    name: contact
    schema: public
  type: add_existing_table_or_view
